nextflow.enable.moduleBinaries = true
process.cache = "lenient"
params.publish_dir_mode = "copy"
params.debug = false
params.save_unaligned = true
params.seq_center = false
params.RVDB_LINK = "https://rvdb-prot.pasteur.fr/files/U-RVDBv29.0-prot_clustered.fasta.xz"

includeConfig './conf/params.config'

env {
    PYTHONDONTWRITEBYTECODE=1
}

def trace_timestamp = new java.util.Date().format( 'yyyy-MM-dd_HH-mm-ss')

report {
    enabled = true
    file = "${params.outdir}/pipeline_info/execution_report_${trace_timestamp}.html"
    overwrite = true
}

timeline {
    enabled = true
    file = "${params.outdir}/pipeline_info/execution_timeline_${trace_timestamp}.html"
    overwrite = true
}

dag {
    enabled = true
    file = "${params.outdir}/pipeline_info/execution_dag_${trace_timestamp}.html"
    overwrite = true
    verbose = true
}

profiles {
    standard {
        includeConfig "./conf/tower_defaults.config"
        includeConfig "./conf/perf.config"
        includeConfig "./conf/modules.config"
        conda {
            enabled = false
            useMamba = false
        }
        docker {
            enabled    = true
            runOptions = '-u $(id -u):$(id -g)'
        }
        errorStrategy = 'finish'
    }
    stub {
        docker.enabled = false
        conda.enabled = false
        includeConfig "./conf/modules.config"
        process {
            cpus = 1
            memory = "1 GB"
        }
    }
    gcp {
        includeConfig "conf/tower_defaults.config"
        includeConfig "conf/perf.config"
        docker {
            enabled    = true
            runOptions = '-u $(id -u):$(id -g)'
        }
        workDir = "${params.WORKDIR}"
        process {
            executor = 'google-batch'
            errorStrategy = { task.exitStatus==50001 ? 'retry' : 'terminate' }
            maxRetries = 3
            machineType = 'c2-*'
        }
        google {
            project = params.PROJECT
            location = params.REGION
            batch.spot = params.spot
        }
    }
}

manifest {
   name        = 'PandoraVirus'
   description = 'This pipeline is designed to identify and characterize viral sequences in metagenomic samples.'
   author      = 'Vin√≠cius Castro Santos'
   version     = '1.0'
}
