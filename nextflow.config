nextflow.enable.moduleBinaries = true
process.cache = "lenient"
params.outdir = "/media/vini8cs/HD_vinicius1/benchmark/results"
params.samples = "samples.tsv"
params.publish_dir_mode = "copy"
params.debug = false
params.taxon_file = "taxon_mapping.csv"
params.TAXONKIT_DATABASE = "/media/vini8cs/HD_vinicius1/benchmark/databases_netxflow/.taxonkit"


env {
    PYTHONDONTWRITEBYTECODE=1
}

def trace_timestamp = new java.util.Date().format( 'yyyy-MM-dd_HH-mm-ss')

report {
    enabled = true
    file = "${params.outdir}/pipeline_info/execution_report_${trace_timestamp}.html"
    overwrite = true
}

timeline {
    enabled = true
    file = "${params.outdir}/pipeline_info/execution_timeline_${trace_timestamp}.html"
    overwrite = true
}

dag {
    enabled = true
    file = "${params.outdir}/pipeline_info/execution_dag_${trace_timestamp}.html"
    overwrite = true
    verbose = true
}

profiles {
    standard {
        //includeConfig "./conf/tower_defaults.config"
        conda {
            enabled = false
            useMamba = false
        }
        docker {
            enabled    = true
            runOptions = '-u $(id -u):$(id -g)'
        }
        errorStrategy = 'finish'
    }
    stub {
        docker.enabled = false
        conda.enabled = false
        process {
            cpus = 1
            memory = "1 GB"
        }
    }
}

process {
    withName: SRATOOLS_FASTERQDUMP {
        ext.args = { [ "--outdir", "\${PWD}" ].join(" ") }
    }
    withName: FASTP {
        publishDir = 
                [
                    path: { "${params.outdir}/${meta.id}/FastqFiltered" },
                    mode: params.publish_dir_mode,
                    pattern: "*.{json,html,log,fastq.gz}",
                    saveAs: { filename -> filename.equals('versions.yml') ? null : filename }
                ]
        ext.args = { ["--adapter_sequence=AGATCGGAAGAGCACACGTCTGAACTCCAGTCA", "--adapter_sequence_r2=AGATCGGAAGAGCGTCGTGTAGGGAAAGAGTGT", "-q", "20", "-l", "45", "--dont_eval_duplication", "--trim_poly_g", "--trim_poly_x"].join(" ") }
        container = "quay.io/biocontainers/fastp:0.23.4--h5f740d0_0"
    }
    withName: NCBIGENOMEDOWNLOAD {
        container = "quay.io/biocontainers/ncbi-genome-download:0.3.3--pyh7cba7a3_0"
        cpus = 4
        ext.args = { "--no-cache" }
    }
}

manifest {
   name        = 'PandoraVirus'
   description = 'This pipeline is designed to identify and characterize viral sequences in metagenomic samples.'
   author      = 'Vin√≠cius Castro Santos'
   version     = '1.0'
}
