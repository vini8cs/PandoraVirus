process {
    withName: SRATOOLS_FASTERQDUMP {
        ext.args = { [ "--outdir", "\${PWD}" ].join(" ") }
    }
    withName: FASTP {
        publishDir = 
                [
                    path: { "${params.outdir}/${meta.id}/FastqFiltered/fastp_result" },
                    mode: params.publish_dir_mode,
                    pattern: "*.{json,html,log}",
                ]
        ext.args = { ["-q", "20", "-l", "45", "--dont_eval_duplication", "--trim_poly_g", "--trim_poly_x"].join(" ") }
        container = "quay.io/biocontainers/fastp:0.23.4--h5f740d0_0"
    }
    withName: HISAT2_BUILD {
        container = "quay.io/biocontainers/mulled-v2-a97e90b3b802d1da3d6958e0867610c718cb5eb1:2cdf6bf1e92acbeb9b2834b1c58754167173a410-0"
    }
    withName: HISAT2_ALIGN {
        container = "quay.io/biocontainers/mulled-v2-a97e90b3b802d1da3d6958e0867610c718cb5eb1:2cdf6bf1e92acbeb9b2834b1c58754167173a410-0"
        publishDir = 
                [
                    path: { "${params.outdir}/${meta.id}/FastqFiltered/hisat2_results" },
                    mode: params.publish_dir_mode,
                    pattern: "*.{bam,log${params.save_unaligned_host_fastq ? ",fastq.gz" : ""}}", 
                ]
    }
    withName: RNA_SPADES {
        ext.args = { ["--rna"].join(" ") }
        container = "quay.io/biocontainers/spades:4.0.0--h5fb382e_1"
        ext.prefix = { "rna_spades_${meta.id}" }
        publishDir = 
                [
                    path: { "${params.outdir}/${meta.id}/Assembly/raw_assembly" },
                    mode: params.publish_dir_mode,
                    pattern: "*.{transcripts,contigs}.fa.gz",
                ]
    }
    withName: META_SPADES {
        ext.args = { ["--meta"].join(" ") }
        container = "quay.io/biocontainers/spades:4.0.0--h5fb382e_1"
        ext.prefix = { "meta_spades_${meta.id}" }
        publishDir = 
                [
                    path: { "${params.outdir}/${meta.id}/Assembly/raw_assembly" },
                    mode: params.publish_dir_mode,
                    pattern: "*.contigs.fa.gz",
                ]
    }
    withName: CORONA_SPADES {
        ext.args = { ["--corona"].join(" ") }
        container = "quay.io/biocontainers/spades:4.0.0--h5fb382e_1"
        ext.prefix = { "corona_spades_${meta.id}" }
        publishDir = 
                [
                    path: { "${params.outdir}/${meta.id}/Assembly/raw_assembly" },
                    mode: params.publish_dir_mode,
                    pattern: "*.contigs.fa.gz",
                ]
    }
    withName: SPADES {
        container = "quay.io/biocontainers/spades:4.0.0--h5fb382e_1"
        ext.prefix = { "spades_${meta.id}" }
        publishDir = 
                [
                    path: { "${params.outdir}/${meta.id}/Assembly/raw_assembly" },
                    mode: params.publish_dir_mode,
                    pattern: "*.contigs.fa.gz",
                ]
    }
    withName: TRINITY {
        container = "quay.io/biocontainers/trinity:2.15.2--pl5321hdcf5f25_1"
        ext.prefix = { "trinity_${meta.id}" }
        publishDir = 
                [
                    path: { "${params.outdir}/${meta.id}/Assembly/raw_assembly" },
                    mode: params.publish_dir_mode,
                    pattern: "*.fa.gz",
                ]
    }
    withName: MEGAHIT {
        ext.prefix = { "megahit_${meta.id}" }
        publishDir = 
                [
                    path: { "${params.outdir}/${meta.id}/Assembly/raw_assembly" },
                    mode: params.publish_dir_mode,
                    pattern: "*.contigs.fa.gz",
                ]
        ext.args = { ["--min-contig-len", params.minsize].join(" ") }
    }
    
    withName: 'CDHIT_.*' {
        container = "quay.io/biocontainers/cd-hit:4.8.1--h5b5514e_7"
        ext.args = { ["-aS", "0.9", "-g", "1", "-n", params.cd_hit_word_size, "-c", params.cd_hit_identity].join(" ") }
    }
    withName: SEQTK_SEQ {
        publishDir = [
            path: { "${params.outdir}/${meta.id}/Assembly" },
            mode: params.publish_dir_mode,
            saveAs: { filename -> filename.equals('versions.yml') ? null : filename }
        ]
        container = "quay.io/biocontainers/seqtk:1.4--he4a0461_1"
        ext.args = { ["-L", params.minsize].join(" ") }
    }
    withName: QUAST {
         publishDir = [
            path: { "${params.outdir}/${meta.id}/Assembly/quality" },
            mode: params.publish_dir_mode,
            saveAs: { filename -> filename.equals('versions.yml') ? null : filename }
        ]
        container = "quay.io/biocontainers/quast:5.2.0--py39pl5321heaaa4ec_4" 
    }
    withName: DIAMOND_BLASTX {
        ext.args = { ["--max-target-seqs", "10", "--evalue", "0.00001"].join(" ") }
        container = "quay.io/biocontainers/diamond:2.1.8--h43eeafb_0"
        ext.when = { "${fasta}".size() > 0 }
    }   
    withName: DIAMOND_MAKEDB {
        publishDir = [
            path: { new File(params.DIAMOND_DATABASE).parent },
            mode: params.publish_dir_mode,
            saveAs: { filename -> filename.equals('versions.yml') ? null : filename }
        ]
        ext.prefix = { new File(params.DIAMOND_DATABASE).name.replaceFirst(/\.dmnd$/, '') }
        container = "quay.io/biocontainers/diamond:2.1.8--h43eeafb_0"
    }
    withName: NCBIGENOMEDOWNLOAD {
        maxForks = 1
        container = "quay.io/biocontainers/ncbi-genome-download:0.3.3--pyh7cba7a3_0"
        ext.args = { def basic_args = ["--no-cache", "--formats", "fasta"]
            def retry_args = ["--uri", "https://ftp.ncbi.nlm.nih.gov/genomes"]
            def all_args = basic_args + (task.attempt > 1 ? retry_args : [])
            all_args.join(" ") }
        errorStrategy = { 'retry' }
        maxRetries = 2

    }
    withName: XZ_DECOMPRESS {
        container = "quay.io/biocontainers/mulled-v2-796b0610595ad1995b121d0b85375902097b78d4:a3a3220eb9ee55710d743438b2ab9092867c98c6-0" 
    }

    withName: GENOMAD_ENDTOEND {
        container = "quay.io/biocontainers/genomad:1.7.4--pyhdfd78af_0"
        publishDir = [
            path: { "${params.outdir}/${meta.id}/Taxonomy/genomad_result" },
            mode: params.publish_dir_mode,
            saveAs: { filename -> filename.equals('versions.yml') ? null : filename }
        ]
    }

    withName: GENOMAD_DOWNLOAD {
        publishDir = [
            path: { new File(params.GENOMAD_DATABASE).parent },
            mode: params.publish_dir_mode,
            saveAs: { filename -> filename.equals('versions.yml') ? null : filename }
        ]
        ext.prefix = { new File(params.GENOMAD_DATABASE).name }
        container = "quay.io/biocontainers/genomad:1.7.4--pyhdfd78af_0"
    }

    withName: VIRSORTER2_RUN {
        ext.args = { ["--include-groups",  params.virsorter2_virus_groups, "--min-length", params.virsort2_minsize, "--min-score", params.virsorter2_minscore].join(" ") }
        errorStrategy = { task.exitStatus == 1 && task.attempt < 5 ? 'retry' : 'ignore' }
        maxRetries = 5
        publishDir = [
            path: { "${params.outdir}/${meta.id}/Taxonomy/virsorter2_result" },
            mode: params.publish_dir_mode,
            pattern: "*.out/final-viral-combined.fa"
        ]
    }

    withName: VIRSORTER2_DOWNLOADDATABASE {
        publishDir = [
            path: { new File(params.VIRSORTER2_DATABASE).parent },
            mode: params.publish_dir_mode,
            saveAs: { filename -> filename.equals('versions.yml') ? null : filename }
        ]
        ext.prefix = { new File(params.VIRSORTER2_DATABASE).name }
    }

    withName: SEQKIT_RMDUP {
        container = "quay.io/biocontainers/seqkit:2.9.0--h9ee0642_0"
        publishDir = [
            path: { "${params.outdir}/${meta.id}/Taxonomy" },
            mode: params.publish_dir_mode,
            pattern: "*.fasta.gz",
        ]
    }
    withName: CHECKV_DOWNLOADDATABASE {
        publishDir = [
            path: { new File(params.CHECKV_DATABASE).parent },
            mode: params.publish_dir_mode,
            saveAs: { filename -> filename.equals('versions.yml') ? null : filename }
        ]
        ext.prefix = { new File(params.CHECKV_DATABASE).name } 
        container = "quay.io/biocontainers/checkv:1.0.1--pyhdfd78af_0"
    }

    withName: UNZIP {
        container = "quay.io/biocontainers/p7zip:16.02"
    }

    withName: SEQTK_SUBSEQ {
        container = "quay.io/biocontainers/seqtk:1.4--he4a0461_1"
    }

    withName: RNAVIRUS_FIND {
        publishDir = [
            path: { "${params.outdir}/${meta.id}/Taxonomy" },
            mode: params.publish_dir_mode,
            pattern: "rna_virus.tsv"
        ]
    }

    withName: CHECKV_DOWNLOADDATABASE {
        container = "quay.io/biocontainers/checkv:1.0.1--pyhdfd78af_0"
    }

    withName: CHECKV_ENDTOEND {
        container = "quay.io/biocontainers/checkv:1.0.1--pyhdfd78af_0"
        publishDir = [
            path: { "${params.outdir}/${meta.id}/Taxonomy/checkv_qualityresults" },
            saveAs: { filename -> filename.equals('versions.yml') ? null : filename }
        ]
    }

}
